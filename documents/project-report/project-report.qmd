---
title: "Using computer vision and AI techniques to improve crowd safety management"
subtitle: "Project report - January 2024"
code-repo: "Access the code, data, and analysis at github repo"
authors:
  - name: Anton Irvold
    email: anirv20@student.sdu.dk
    affiliations: 
      - id: SDU
        name: University of Southern Denmark
        department: Teknisk Fakultet
        address: Campusvej 55
        city: Odense M
        country: Denmark
        postal-code: 5230
  - name: Christoffer Krath
    email: chkra19@student.sdu.dk
    affiliations:
      - id: SDU
        name: University of Southern Denmark
        department: Teknisk Fakultet
        address: Campusvej 55
        city: Odense M
        country: Denmark
        postal-code: 5230
bibliography: citations.bib
format:
  hikmah-pdf: default
  hikmah-manuscript-pdf: default
---

# Administrative Info

**Collaborators from Event Safety**

* Sofie Dahl, sofie@eventsafety.dk

* Christian Sejlund, christian@eventsafety.dk

**SDU supervisor**

* Sune Lundø Sørensen, slso@mmmi.sdu.dk

![](../images/SDU_LOGO.png){height=50%}

{{< pagebreak >}}

# Context and Background

![Fatalities in crowds graph [Figure from @FELICIANI2023106174]](../images/fatalities.jpg){#fig-fatalities}

As seen from @fig-fatalities accidents, fatalities and injuries at festivals and concerts worldwide are on the rise, with just below 5,000 worldwide deaths in the decade of 2010-2019. This can be attributed to several causes, according to @inproceedings: First of all, an increase in the popularity of outdoor music festivals resulting in more and larger festivals with large crowds. Also, high-risk behavior among crowd attendants and the performing artist’s music, behavior, and stage show affects the crowd's safety. Cultural influence has also played a large part in the safety of outdoor musical events. This can be behavior such as crowd surfing, moshing, stage diving and the like. Sudden panic in a crowded place can thus affect the safety of the crowd. 

It is worth mentioning that these figures and descriptions of situations are from media outlets. As such, it's not the full story. While these statistics might make it seem that general safety and incidents at festivals and the like have gotten worse, it is the opposite, It is generally incredibly safe to attend these events, but using newer technologies we will attempt to enhance it further.

At the same time, festivals in Denmark and the rest of the world have had a focus on mitigating the safety risk in large crowds. This can be seen by the establishment of the [Event Safety Foundation](https://eventsafety.dk/historie) in 2015. This is a joint venture between the Skanderborg Festival Group (Smukfest) and Muskelsvindfonden (Grøn Koncert). This foundation has the purpose of securing the safety of the crowds at these two large Danish festivals, as well as many other events in Denmark. They do this through knowledge sharing, professionals and trained volunteers, courses and counseling. This is the company that this project will be done in collaboration with.

To have the best possible outcome for this project, Event Safety invited us to Grøn Koncert and Smukfest in July and August to see how they work and gather security video footage of real crowds at festivals to use as training data. We will also use Event Safety for their practical and theoretical knowledge of crowd safety to use in the system, user feedback and user testing. 

# Problem Statement

Can computer vision software and AI techniques be leveraged to improve crowd overview for security guards, by receiving video feed from large crowds, and ultimately improve crowd safety?

# Timeline

| **Date** 	| **Activity** 	|
|---	|---	|
| July-August | Gathering data at attended festivals in collaboration with Event Safety |
||
| August 	| Drafting the project description 	|
||
| 31-08-2023 	| Delivering the project description 	|
||
| 09-09-2023 	| Final discussion with Event Safety regarding the proposed solutions, requirements and the project going forward 	|
| September 	| In-depth analysis of use cases (with Event Safety) In-depth analysis of required technologies and methods used in academic literature.  Design of the system 	|
||
| 25-09-2023 	| Progress update with Event Safety regarding the design of the system 	|
||
| October 	| Implementation of proof of concept system (primarily backend) 	|
||
| 26-10-2023 	| Progress update with Event Safety and small-scale user testing 	|
||
| 31-10-2023 	| Attending Crowd Safety Course hosted by Event Safety in Copenhagen 	|
||
| November 	| Implementation of proof of concept system 	|
||
| December 	| Final implementation of the system Documentation of the system User testing and evaluation 	|    

{{< pagebreak >}}

# Analysis

## Acronyms and definitions

| **Acronyms**  | **Definition** |
|--- |--- |
| CSM              | Crowd Safety Management System |
||
| Crowd Counting              | The defintion of crowd counting in this report follows the definition from @chan2008: "[...] a privacy-preserving system for estimating the size of inhomogeneous crowds, [...] without using explicit object segmentation or tracking" |
||
| AI               | Artificial Intelligence |
||
| ANN               | Artificial Neural Network |
||
| CNN               | Convolutional Neural Network |
||
| ML               | Machine Learning |
||
| CCTV             | Closed Circuit Television |
||
| Crowd Surges     | A dangerous crowd situation where your movement is controlled by the crowd and not your own actions. |
||
| Mosh pit         | A crowd situation where people vacate an area in the crowd followed by violent or aggressive dancing. Sizes of Mosh pits vary greatly. |
||
| Technical user   | A developer or technician that can implement the CSM in the technical setup of a concert or venue |
||
| Non-technical user | A security guard or someone viewing crowd footage through the CSM without any technical or software-related background |
||
| Choke point      | Point with high crowd density and crowd influx           |
||

{{< pagebreak >}}

## System specification

Using cameras mounted around a hotspot of a crowd or on a stationary drone, we aim to develop a platform where an AI model receives live footage from these cameras, uses the model to segment the crowd, and learns what a dangerous situation might look like. This could be one or more of the following [@inproceedings]: 

* Several people moving into the crowd from a specific direction create a dangerous pressure point
* More than a specified amount of people in a marked area resulting in unsafe conditions (ie. >6 people per square meter)
* Omnidirectional or directional movement in the crowd resulting in a dangerous situation
* An area in the crowd suddenly being void of people, perhaps hinting at a mosh pit or an emergency

These are some of the situations this project aims to systematically detect and alert professionals by providing meaningful feedback.

The system would consist of the following: 

1. A backend that receives the data from the cameras developed in either Java or Python, with an implementation of a machine learning model to handle the video feed according to the bullet list above and exposing this data through an API
1. A simple frontend or GUI (Graphical User Interface) to display this information in a meaningful way.  This could be through a heat map, a numerical estimate of a risk factor, or other visual output.

![Component diagram of the system](../images/component-diagram-1.png){height=50% #fig-component-diagram}

An initial component diagram that maps this described system can be seen in @fig-component-diagram.

## Functional Requirements
| **ID**   | **MoSCoW**   | **Requirement**  |
| --- | -------------- | ----------------------------------------------------- |
| 1   | M        | The system **must** be able to count the amount of people in the crowd with a precision of <100 MAE|
|     |          |                                                             |
| 2   | M        | The system **must** be able to segment the crowd into virtual sections for further processing |
|     |          |                                                             |
| 3   | M        | The system **must** be able to create a heatmap of the crowd density |
|     |          |                                                             |
| 4   | S        | The system **should** be able to calculate the "rea" density pr. area unit |
|     |          | 
| 5   | S        | The system **should** be able to detect the movement of crowd sections |
|     |          |                                                             |
| 6   | S        | The system **should** be able to correct for camera distortion, warp and perspective |
|     |          |                                                             |
| 7   | S        | The system **should** be able to detect choke points in the crowd movements |
|     |          |                                                             |
| 8   | S        | The system **should** be able to generate a summarizing report of the concert with statistics of (crowd density, crowd count, risk factors, choke points, and other) relevant safety indicators after the event |
|     |          |                                                             |
| 9   | C        | The system **could** be able to estimate a numerical risk factor based on available factors |
|     |          |                                                             |
| 10   | C        | The system **could** be able to generate a live, or delayed, video overlaid user interface |
|     |          |                                                             |
| 11  | W        | The system **will not** be able to identify dangerous situations that might call for cautionary actions such as crowd surge, mosh pits, falls, blocked exits, etc. |
|     |          |                                                             |
| 12  | W        | The system **will not** be able to use data gathered elsewhere at a concert such as alcohol sales, average crowd age, sound, artists, etc. to give a more precise crowd profile and thus risk factor |

{{< pagebreak >}}

## Non-functional requirements

| **ID**   | **MoSCoW**   | **Requirement**  |
| --- | -------------- | ----------------------------------------------------- |
| 1   | M        | The system **must** protect the privacy of the personal data |
|     |          |                                                             |
| 2   | S        | The system **should** have a user-friendly interface that is easy to manage for both technical and non-technical users |
|     |          |                                                             |
| 3   | S        | The system **should** have adequate documentation / technical specification for technical users |
|     |          |                                                             |
| 4   | S        | The system **should** have adequate user manuals for non-technical users |
|     |          |                                                             |
| 5   | C        | The system **could** have high reliability that is not based on the visual circumstances and environment (e.g. sunlight, stage light, audience flashlights, and other visual effects) or report confidence based on environment |
|     |          |                                                             |
| 6   | C        | The system **could** be scalable to simultaneous interoperability between multiple cameras |
|     |          |                                                             |
| 7   | C        | The system **could** integrate with existing CCTV software systems at venues |

{{< pagebreak >}}

## Detailed Requirements

## Risks

## Method and theory

### Crowd counting
Crowd counting is a field of computer vision research that has developed quickly in recent years. It is a technique that aims to count the instances of any object in an image, no matter the context, density or type of object. [@sasnet] This differentiates it from object detection which is usually trained on one specific type of object by extracting certain visual features. The benefits from using crowd counting rather than object detection is: 
* Crowd counting is less intensive on computing resources.
* Crowd counting performs better in crowded scenes with varying scales of objects and overlapping objects.
* Crowd counting is more robust in environments with changes in light, without the need of specific training data.
* Crowd counting is not as exposed to the risk of over fitting the model. 
[@li2021approaches]
* Crowd counting does not single out individuals, but looks at the crowd holistically [@chan2008]
For these reasons crowd counting is a method that can be used for many domains including traffic and parking analysis, pedestrian crowds, corn and crop counting, and much more. This project will use crowd counting methods to analyse, count and estimate density of concert crowds.

[@li2021approaches] says the current leading approach to crowd counting is the use of a CNN. This paper, contrary to our definiton of crowd counting, includes object detection as a method of crowd counting. It also includes regression based methods and, of course, CNN's. The main challenge with CNN's for crowd counting is to differentiate between the large scale variations in the countable human heads. [@li2021approaches] discuss several categories of approaches for CNN based models to solve the scale variation problems, one of which is multi-scale fusion. This approach is the category that this paper proposes for further research, as it shows promising results in the balance between performance and accuracy.

#### Convolutional Neural Network (CNN)
Convolutional Neural Networks (CNN) are a type of Artificial Neural Networks (ANN) that are used to "solve difficult image-driven pattern recognition tasks." [@DBLP:journals/corr/OSheaN15] ANN's function on an input in the form of a multi-dimensional vectors, which will be distributed to a number of hidden layers. The hidden layers will be weighted by evaluating how a stochastic change within itself affects the final output (backpropagation). Deep learning is an ANN with multiple hidden layers. ANN's can be either supervised: Being trained on a set of labeled training data, or unsupervised: Having no labeled training data, but instead minimizing the result of the cost function. According to @DBLP:journals/corr/OSheaN15, supervised learning is usually necessary for image-focused pattern recognition tasks.

CNN's are similar to ANN's in almost every way, with the only difference being that CNN's allow to encode image specific features such as edges, textures, color patterns and shape features. This reduces the complexity of a traditional ANN trained on image data, where a vector representation grows in size exponentially depending on the image size. Reducing the feature vector also reduces the risk of overfitting the model. This is done through the process of convolution. In the convolution layer, local regions of the image vector are scanned for image relevant features. Usually the features are run through a pooling layer, reducing its computational complexity by sampling and down-scaling the features. This feature map is then fed to a traditional ANN, with a given amount of hidden layers. 

For the reasons outlined here from @DBLP:journals/corr/OSheaN15 and @li2021approaches, this project will focus on the use of CNN based models for crowd counting. 

#### SASNet
Multi-scale fusion for SASNet.


### Regarding SAM model for crowd counting:  

"Although the Segment Anything model (SAM) has shown impressive performance in many scenarios, it currently lags behind state-of-the-art few-shot counting methods, especially for small and congested objects. We believe that this is due to two main reasons. Firstly, SAM tends to segment congested objects of the same category with a single mask. Secondly, SAM is trained with masks that lack semantic class annota- tions, which could hinder its ability to differentiate between different objects. Nevertheless, further exploration of adapt- ing SAM to the object counting task is still worth studying." [@ma2023sam]

### Completely Self-Supervised Crowd Counting via Distribution Matching 
Unsupervised Learning, Crowd Counting, Deep Learning

Possible to use a model not trained on relevant data but still able to produce meaningful results. Some are even better than other models. [@sam2020completely]

### Possible solution using google colab
 Setup an environment implemeneting SASNet. Eliminates use of anaconda but perhaps at the cost of a paid subscription.

 It was consideret to use a CNN model called CRSNet. However, reasarch suggest that CRSnet might have problems with scale variations, which is a common problem in crowd counting.
 Because of this, SASNet is quite possible a much better solution. 
[@sasnetCrowd] 
[@sasnet]



{{< pagebreak >}}

# Design

{{< pagebreak >}}

# Implementation

{{< pagebreak >}}

# Validation and Verification

{{< pagebreak >}}

# Discussion

{{< pagebreak >}}

# Conclusion

{{< pagebreak >}}

# Perspective

{{< pagebreak >}}

# References